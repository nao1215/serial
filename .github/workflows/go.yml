name: Serial command build & test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        export GOPATH=$HOME/go
        export GOBIN=$(go env GOPATH)/bin
        export PATH=$PATH:$GOPATH
        export PATH=$PATH:$GOBIN
        mkdir -p $GOPATH/pkg
        mkdir -p $GOBIN
        mkdir -p $GOPATH/src/github.com/$GITHUB_REPOSITORY
        mv ./* $GOPATH/src/github.com/$GITHUB_REPOSITORY
        cd $GOPATH/src/github.com/$GITHUB_REPOSITORY
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        fi
        make deps

  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          export GOPATH=$HOME/go
          export GOBIN=$(go env GOPATH)/bin
          export PATH=$PATH:$GOPATH
          export PATH=$PATH:$GOBIN
          mkdir -p $GOPATH/pkg
          mkdir -p $GOBIN
          mkdir -p $GOPATH/src/github.com/$GITHUB_REPOSITORY
          mv ./* $GOPATH/src/github.com/$GITHUB_REPOSITORY
          cd $GOPATH/src/github.com/$GITHUB_REPOSITORY && make

  test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Test
        run: |
          export GOPATH=$HOME/go
          export GOBIN=$(go env GOPATH)/bin
          export PATH=$PATH:$GOPATH
          export PATH=$PATH:$GOBIN
          mkdir -p $GOPATH/pkg
          mkdir -p $GOBIN
          mkdir -p $GOPATH/src/github.com/$GITHUB_REPOSITORY
          mv ./* $GOPATH/src/github.com/$GITHUB_REPOSITORY
          cd $GOPATH/src/github.com/$GITHUB_REPOSITORY && make test
